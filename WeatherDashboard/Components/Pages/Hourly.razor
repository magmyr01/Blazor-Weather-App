@page "/{City}/hourly"

@attribute [StreamRendering]

@inject WeatherService WeatherService
@inject CitiesService CitiesService

<PageTitle>Hourly weather in @City</PageTitle>

@if(WeatherInfo is null)
{
	<p>Loading...</p>
}
else
{
	<div style="display:flex; flex-direction:column; flex-wrap:wrap;">
		
		@foreach(var entry in WeatherInfo.TimeSeries.Take(10))
		{
			<div>
				<BasicCard CardTitle="@($"Weather at {entry.ValidTime.ToString("HH:00tt")}")" CardWidth="60%">
					<Body>
						<MudStack Row="true" Justify="Justify.SpaceBetween">
							<MudStack Row="true" AlignItems="AlignItems.Center">
								<img src="@WeatherService.WeatherCodeToWeatherSymbolConverter((int)WeatherInfo.TimeSeries[0].ParametersDictionary["Wsymb2"].Values[0])" width="40" height="40" fill="white" />
								<MudText class="fs-3">@entry.ParametersDictionary["t"].Values[0].ToString()°</MudText>
							</MudStack>
							<MudPaper Class="pa-4">
								<MudStack Row="false">
									<MudStack Row="true">
										<MudText>Wind speed: </MudText>
										<MudText>@entry.ParametersDictionary["ws"].Values[0].ToString() m/s</MudText>
									</MudStack>
									<MudStack Row="true">
										<MudText>Humidity: </MudText>
										<MudText>@entry.ParametersDictionary["r"].Values[0].ToString()%</MudText>
									</MudStack>
								</MudStack>
							</MudPaper>
						</MudStack>
						
					</Body>
				</BasicCard>
			</div>
		}

	</div>
}

@code {
	[Parameter]
	public string? City { get; set; }

	private MyResponseType? WeatherInfo;

	protected override async Task OnInitializedAsync()
	{
		WeatherInfo = await WeatherService.GetDataAsync(CitiesService.GetSelectedCity().Longitude, CitiesService.GetSelectedCity().Latitude);
		await base.OnInitializedAsync();
	}
}
