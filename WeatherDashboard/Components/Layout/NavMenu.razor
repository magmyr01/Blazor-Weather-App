@inject CitiesService CitiesService
@inject NavigationManager NavigationManager

<MudPaper Class="py-3" Elevation="2">
	<MudNavMenu>
		<MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard" IconColor="Color.Inherit" Href="@($"/{CitiesService.GetSelectedCity().Locality}/today")">
			Today in @city.Locality
		</MudNavLink>
		<MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.LocalLibrary" IconColor="Color.Inherit" Href="@($"/{CitiesService.GetSelectedCity().Locality}/hourly")">
			Hourly in @city.Locality
		</MudNavLink>
		<MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.People" IconColor="Color.Inherit" Href="@($"/{CitiesService.GetSelectedCity().Locality}/10Day")">
			10-day in @city.Locality
		</MudNavLink>
	</MudNavMenu>
</MudPaper>

@code
{
	public SwedishCitiesModel city => CitiesService.GetSelectedCity();

	protected override void OnInitialized()
	{
		CitiesService.SelectedCityChanged += OnDataClassChanged;
	}

	public void Dispose()
	{
		CitiesService.SelectedCityChanged -= OnDataClassChanged;
	}

	public void OnDataClassChanged(object? sender, SwedishCitiesModel value)
	{
		InvokeAsync(StateHasChanged);
	}
}