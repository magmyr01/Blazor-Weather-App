@using System.ComponentModel.DataAnnotations
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject CitiesService CitiesService


<MudGrid Style="width:600px">
	<MudItem xs="8" sm="8" md="8">
		<MudAutocomplete T="SwedishCitiesModel" Label="City" @bind-Value=@searchQuery SearchFunc="@CitySearch"
						 ToStringFunc="@(e => e==null?null : $"{e.Locality}")" CoerceValue="false"/>
	</MudItem>
	<MudItem>
		<button class="btn btn-outline-success" style="place-self:baseline" @onclick="SubmitSearch">Search</button>
	</MudItem>

</MudGrid>


@code
{
	private bool showError;
	private string errorMessage = string.Empty;
	private SwedishCitiesModel? searchQuery;
	private SwedishCitiesModel selectedCity => CitiesService.GetSelectedCity();

	private SwedishCitiesModel? SearchQuery
	{
		get { return searchQuery; }
		set
		{
			searchQuery = value;
		}
	}

	private void SubmitSearch(EventArgs e)
	{
		if (searchQuery is null)
		{
			errorMessage = "Field can't be empty";
			showError = true;

		}
		// else if (filteredCities!.Count == 0)
		// {
		// 	errorMessage = "Couldn't find the specified city";
		// 	showError = true;
		// 	return;
		// }
		else
		{
			CitiesService.UpdateSelectedCity(searchQuery);
			NavigationManager.NavigateTo(CitiesService.GetSelectedCity().Locality + "/today");
		}
	}

	private async Task<IEnumerable<SwedishCitiesModel>> CitySearch(string value, CancellationToken token)
	{
		return (IEnumerable<SwedishCitiesModel>)CitiesService.FilterCities(value);
	}
}